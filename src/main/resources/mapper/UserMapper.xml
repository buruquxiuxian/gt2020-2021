<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.co.allttss.api.mapper.UserMapper">
    <cache eviction="LRU" type="cn.co.allttss.api.common.config.MybatisRedisCache"/>
    <resultMap id="BaseResultMap" type="cn.co.allttss.api.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, age, sex
    </sql>
    <update id="updateByPrimaryKey" parameterType="cn.co.allttss.api.entity.User" flushCache="true">
            update user
            set name = #{name},
            age = #{age},
            sex = #{sex}
            where id = #{id}
    </update>
    <!-- 对这个语句useCache="true"默认是true，可以不写 -->
    <!--数据返回统一使用实体类resultType-->
    <select id="getAll" resultType="cn.co.allttss.api.multientity.userResult" useCache="true">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>

    <!-- 对这个语句禁用二级缓存 -->
    <select id="findByPage" resultMap="BaseResultMap" useCache="false">
        select
        <include refid="Base_Column_List"/>
        from person
    </select>
    <!--    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">-->
    <!--        delete from person-->
    <!--        where id = #{id,jdbcType=BIGINT}-->
    <!--    </delete>-->
    <!--    <insert id="insert" parameterType="com.xiaolyuh.domain.model.Person">-->
    <!--        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">-->
    <!--            SELECT LAST_INSERT_ID()-->
    <!--        </selectKey>-->
    <!--        insert into person (name, age, address-->
    <!--        )-->
    <!--        values (#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}-->
    <!--        )-->
    <!--    </insert>-->
    <!--    <insert id="insertSelective" parameterType="com.xiaolyuh.domain.model.Person">-->
    <!--        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">-->
    <!--            SELECT LAST_INSERT_ID()-->
    <!--        </selectKey>-->
    <!--        insert into person-->
    <!--        <trim prefix="(" suffix=")" suffixOverrides=",">-->
    <!--            <if test="name != null">-->
    <!--                name,-->
    <!--            </if>-->
    <!--            <if test="age != null">-->
    <!--                age,-->
    <!--            </if>-->
    <!--            <if test="address != null">-->
    <!--                address,-->
    <!--            </if>-->
    <!--        </trim>-->
    <!--        <trim prefix="values (" suffix=")" suffixOverrides=",">-->
    <!--            <if test="name != null">-->
    <!--                #{name,jdbcType=VARCHAR},-->
    <!--            </if>-->
    <!--            <if test="age != null">-->
    <!--                #{age,jdbcType=INTEGER},-->
    <!--            </if>-->
    <!--            <if test="address != null">-->
    <!--                #{address,jdbcType=VARCHAR},-->
    <!--            </if>-->
    <!--        </trim>-->
    <!--    </insert>-->
    <!--    <update id="updateByPrimaryKeySelective" parameterType="com.xiaolyuh.domain.model.Person">-->
    <!--        update person-->
    <!--        <set>-->
    <!--            <if test="name != null">-->
    <!--                name = #{name,jdbcType=VARCHAR},-->
    <!--            </if>-->
    <!--            <if test="age != null">-->
    <!--                age = #{age,jdbcType=INTEGER},-->
    <!--            </if>-->
    <!--            <if test="address != null">-->
    <!--                address = #{address,jdbcType=VARCHAR},-->
    <!--            </if>-->
    <!--        </set>-->
    <!--        where id = #{id,jdbcType=BIGINT}-->
    <!--    </update>-->
    <!--    <update id="updateByPrimaryKey" parameterType="com.xiaolyuh.domain.model.Person">-->
    <!--        update person-->
    <!--        set name = #{name,jdbcType=VARCHAR},-->
    <!--        age = #{age,jdbcType=INTEGER},-->
    <!--        address = #{address,jdbcType=VARCHAR}-->
    <!--        where id = #{id,jdbcType=BIGINT}-->
    <!--    </update>-->

</mapper>